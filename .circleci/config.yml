version: 2.1

executors:
  main-executor:
    docker:
      - image: cimg/rust:1.44
        environment:
          GOOGLE_APPLICATION_CREDENTIALS: /home/circleci/gcloud-service-key.json
          VAULT_ADDR: http://vault:8200/
          VAULT_TOKEN: root

      - image: vault:1.4.2
        name: vault
        environment:
          VAULT_DEV_ROOT_TOKEN_ID: root
          VAULT_ADDR: http://vault:8200/
          VAULT_TOKEN: root


step-ensure-libssl: &step-ensure-libssl
  # needed to for compiling some rust dependencies on circleci debian image
  #     (oath->ring, tokio/tls)
  run:
    name: install-libssl
    command: |
      sudo apt-get update \
          && sudo apt-get install -y pkg-config openssl libssl-dev

step-gcloud-cli-install: &step-gcloud-cli-install
  # Install Google Cloud SDK (gcloud cli)
  run:
    name: install-gcloud
    command: |
      curl -sS https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-300.0.0-linux-x86_64.tar.gz\
         | (cd $HOME;  tar xz)
      echo 'export PATH=/home/circleci/google-cloud-sdk/bin:$PATH' >> $BASH_ENV
      if [ -n "$GCLOUD_SERVICE_KEY" ]; then
        echo "$GCLOUD_SERVICE_KEY" > "$GOOGLE_APPLICATION_CREDENTIALS"
      fi

step-gcloud-cli-init: &step-gcloud-cli-init
  # Initialize Google Cloud SDK (gcloud cli)
  run:
    name: initialize-gcloud
    command: |
      gcloud auth activate-service-account "--key-file=$GOOGLE_APPLICATION_CREDENTIALS"
      gcloud config set project $GOOGLE_PROJECT_ID --installation

step-local-net-config: &step-local-net-config
  # import secrets when running locally
  run:
    name: local-net-config
    command: |
      if [ -n "$LOCAL_CONFIG_URL" ]; then
        curl -sS -o /tmp/local_cfg.sh "$LOCAL_CONFIG_URL"
        bash /tmp/local_cfg.sh
      fi

step-verify-build-requirements: &step-verify-build-requirements
  # perform sanity tests before we get started
  run:
    name: verify-build-requirements
    command: |
      [ -z "$GOOGLE_APPLICATION_CREDENTIALS" ] \
          && echo "Environment must define GOOGLE_APPLICATION_CREDENTIALS" && exit 1
      [ -z "$GOOGLE_PROJECT_ID" ] \
          && echo "Environment must define GOOGLE_PROJECT_ID" && exit 1
      [ ! -f "$GOOGLE_APPLICATION_CREDENTIALS" ] \
          && echo "Credentials file missing" && exit 1
      (command -v rustc) || ( echo "Rust not installed" && exit 1 )
      (command -v gcloud) || ( echo "Google Cloud SDK not installed" && exit 1 )
      if [ -d /home/circleci/.ssh ]; then
        ls -al /home/circleci/.ssh
      else
        echo no ssh folder
      fi

jobs:
  build:
    executor: main-executor
    steps:
      - *step-local-net-config
      - *step-ensure-libssl
      - *step-gcloud-cli-install
      - *step-gcloud-cli-init
      - *step-verify-build-requirements
      - add_ssh_keys:
          fingerprints:
            - "fe:86:48:d8:c1:28:1c:3b:f1:d1:eb:4a:bd:2e:4a:db"
      - checkout
      - run:
          name: Setup
          command: |
            ci/vault-enable-transit
      - run:
          name: Build
          command: |
            cargo build --all
      - run:
          name: Test
          command: |
            cargo test --all
            PROG=target/debug/encrypt ./examples/encrypt-rs/test-env
            PROG=target/debug/encrypt ./examples/encrypt-rs/test-cloudkms
            PROG=target/debug/encrypt ./examples/encrypt-rs/test-hashivault
  

